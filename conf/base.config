// Job paramaters to set for this environment

params.outdir = "output" 

// Process setting

process {

  // Global cluster parameters

  cpus = { check_max( 1 * task.attempt, 'cpus' ) }
  memory = { check_max( 8.GB * task.attempt, 'memory' ) }
  time = { check_max( 2.h * task.attempt, 'time' ) }

  errorStrategy = { task.exitStatus == 143 ? 'retry' : 'finish' }
  maxRetries = 3
  maxErrors = '-1'
 
  // Specific cluster parameters for each process

  withName:runBwa {
	cpus = { check_max( params.max_cpus * task.attempt, 'cpus' ) }
  	memory = { check_max( 32.GB * task.attempt, 'memory' ) }
  	time = { check_max( 48.h * task.attempt, 'time' ) }
  }

  withName: runFastQC {
	cpus = { check_max( 8 * task.attempt, 'cpus' ) }
        memory = { check_max( 8.GB * task.attempt, 'memory' ) }
        time = { check_max( 16.h * task.attempt, 'time' ) }
  }

  withName:runMetaphlan {
        cpus = { check_max( 8 * task.attempt, 'cpus' ) }
        memory = { check_max( 32.GB * task.attempt, 'memory' ) }
        time = { check_max( 16.h * task.attempt, 'time' ) }
  }

  withName:runSample2Markers {
	cpus = { check_max( 8 * task.attempt, 'cpus' ) }
        time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName:runStrainphlanClades {
	cpus = { check_max( 8 * task.attempt, 'cpus' ) }
        time = { check_max( 6.h * task.attempt, 'time' ) }
  }
  withName: runKneaddata {
	cpus = { check_max( 24 * task.attempt, 'cpus' ) }
        memory = { check_max( 64.GB * task.attempt, 'memory' ) }
        time = { check_max( 96.h * task.attempt, 'time' ) }
  }

  withLabel: 'kneaddata' {
	container = "docker://quay.io/biocontainers/kneaddata:0.7.4--py_0"
  }

  withLabel: 'metaphlan' {
	container = "docker://quay.io/biocontainers/metaphlan:3.0--pyh5ca1d4c_4"
  }

  withLabel: 'fastqc' {
	container = "docker://quay.io/biocontainers/fastqc:0.11.9--0"
  }

  withLabel: 'multiqc' {
	container = "docker://quay.io/biocontainers/multiqc:1.9--pyh9f0ad1d_0"
  }
  
}


